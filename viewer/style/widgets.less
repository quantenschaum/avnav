@import "flexbox.less";
@import "defines.less";

@x: rgba(255, 20, 7, 0.54);

@horizontalContainerHeight: 4.2em;
@horizontalContainerDoubleHeight: 8.2em;
@horizontalWidgetHeight: 4em;
@infoFontSize: 0.71em;

.widgetInfo(){
  font-size: @infoFontSize;
  opacity: 0.7;
}
.widget{
  position: relative;
  z-index: 100;
  margin: 1px;
  overflow: hidden;
  pointer-events: all;
  background: white;
  .nightColors();
  .flex-shrink(0);
  .flex-grow(1);
  .flex-display();
  .flex-direction(column);
  .flex-justify-content(flex-start);
  .widgetHead {
    margin: 0;
    padding: 0 0.2em;
    display: flex;
    .flex-direction(row);
    .flex-justify-content(space-between);
    white-space: nowrap;
    .infoLeft{
      .widgetInfo();
    }
    .infoRight{
      .widgetInfo();
    }
  }
  .widgetData{
    text-align: center;
    padding: 0 0.1em;
    width: 100%;
    max-height: 100%;
    min-height: 0;
    min-width: 0;
  }
  canvas.widgetData{
    padding: 0;
  }
  &.average .infoLeft{
    .nightForeColor(red);
  }

  .label {
    .mdText2();
  }
  .editing &{
    .flex-grow(0);
  }
  .unit{
    font-size: @infoFontSize;
    opacity: 0.7;
    margin-left: 0.2em;
  }
  .resize,.noresize{
    .flex(1);
    min-width: 0;
    min-height: 0;
  }
  & > .resize, & > .noresize{
    .flex-display();
    .flex-direction(column);
  }
  .horizontal > & > .resize, .horizontal > & > .noresize{
    .flex-direction(row);
  }

}
//----- dashboard pages (gps page) ------
.hfield .widgetContainer .widget{
  .widgetHead {
    border-bottom: 1px solid;
    border-top: 1px solid;
    .nightBackFade(#E2DFDF);
    height: unset;
  }
  width: unset;
  margin: 0;
  .widgetData{
    padding-top: 0;
    display: block;
    white-space: pre;
  }
  .centeredWidget {
    .widgetData{
      text-align: center;
    }
  }
}
.widgetContainer{
  font-size: @widgetFontSize;
  .flex-display();
  .widget{
    .flex-shrink(0);
  }
  overflow: hidden;
  background-color: @colorMain;
  .nightColors();
  .flex-shrink(0);
}
.widgetContainer.horizontal{
  .flex-wrap(wrap);
  .flex-align-items(top);
  max-height: @horizontalContainerHeight;
  .twoRows &{
    max-height: @horizontalContainerDoubleHeight;
  }
  .widget{
    height: @horizontalWidgetHeight;
  }
  .editing &{
    .flex-wrap(nowrap);
    min-height: @horizontalContainerHeight;
    .widget{
      .flex-shrink(1);
    }
  }
}

.widgetContainer.vertical{
  overflow: hidden;
  .flex-direction(column);
  .flex-justify-content(flex-end);
  .flex-align-items(stretch);
  .widget{
    min-width: 0;
    .flex-shrink(1);
    margin-left: 0;
    margin-right: 2px;
    width: calc(100% - 2px);
  }
  .editing &{
    top: 0;
    min-width: 8em;
  }
}
.mapWidgetContainer.widgetContainer {
  width: 0;
  height: 0;
}

//------------------ dedicated widgets -------------------------
//widgets have their name from the widget list and maybe some additional fixed name as classes
@bigFont: 3em;
@bigFontVertical: 2em;
@smallFont: 1em;
@timeFont: 1.5em;
@clockFont: 2.5em;
@size1: 7em;
@size15: 9em;
@size2: 11em;

.blink() {
  animation: blinker 1s linear infinite;
}

@keyframes blinker {
  50% { opacity: 0; }
}

.widget{
  width: min-content; // allow dynamic scaling to size of content

  .widgetHead {
    .nightBackColor(#eee);
  }

  .widgetData {
    line-height: 1em;
//     background: yellow;
  }

  .bigWidget(){
    .widgetData{
      font-size: @bigFont;
    }
    .vertical & .widgetData {
      font-size: @bigFontVertical;
    }
  }

  .medWidget(){
    .widgetData{
      font-size: @timeFont;
    }
    .horizontal & .widgetData {
      padding-top: 0.5em;
    }
  }

  .smallWidget(){
    .widgetData{
      font-size: @smallFont;
      line-height: 1.2em;
    }
    .horizontal & .widgetData {
      padding-top: 0.2em;
    }
  }

  .bigWidget(); // big is the default

  // shortcuts for manual use
  &.big { .bigWidget(); }
  &.med { .medWidget(); }
  &.small { .smallWidget(); }

  &.DateTime { .smallWidget(); }
  &.ETA { .medWidget(); }
  &.RteEta { .medWidget(); }
  &.TimeStatus, &.LargeTime, &.Position {
    &.error .infoRight {
      .blink();
      color: red;
    }
    &.ok .infoRight {
      opacity: 1;
      color: green;
    }
  }
  &.TimeStatus {
    .medWidget();
  }
  &.Position, &.WpPosition{
    .smallWidget();
    .widgetData{
      font-family: monospace;
    }
  }
  &.aisTargetWidget{
    .smallWidget();
    .nightBackColor(@colorSecond);
    .aisFront{
      display: inline-block;
      font-size: 1.5em;
      line-height: 1.2em;
    }
    .label{
      width: 2em;
    }
    .widgetData ~ .widgetData{
      padding-top: 0;
    }
    .hfield & .aisPart{
      .flex-display();
      .flex-direction(column);
      .flex(1);
    }
  }

  &.activeRouteWidget{
    .smallWidget();
    .routeName{
      margin-top: 0.8em;
      margin-right: 0.2em;
      .mdText2();
      overflow: hidden;
      white-space: nowrap;
    }
    .routeRemain{
      font-size: 1.5em;
    }
    &.approach{
      .nightBackFade(@routeApproachingColor);
    }
  }
  &.editRouteWidget{
    border: 3px solid;
    .nightBorderFade(@colorGreen);
    &.activeRoute{
      .nightBorderFade(@colorRed);
    }
    .smallWidget();
    .widgetData{
      .routeInfo {
        width: 4.5em;
        display: inline-block;
        .horizontal &{
          width: auto;
          margin-right: 0.3em;
        }
      }
      &.routeName{
        margin-top: 0.5em;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
        .horizontal &{
          text-align: left;
          display: block;
        }
      }
      .horizontal &{
        margin-top: 0;
        padding-top: 0;
        display: inline-block;
      }

    }
    .vertical &{
      min-height: 8em;
    }
  }

  &.centerDisplayWidget{
    .smallWidget();
    .widgetData ~ .widgetData{
      margin-top: 0;
    }
    .value{
      display: inline-block;
    }
    .label {
      display: inline-block;
      background-size: 1em 1em;
      background-repeat: no-repeat;
      width: 1em;
      height: 1em;
      float: left;
      &.boat {
        background-image: url(../images/icons-new/boat.svg);
      }
      &.marker {
        background-image: url(../images/icons-new/waypoint.svg);
      }
      &.measure{
        background-image: url(../images/icons-new/outlined_flag.svg);
      }
    }
    .horizontal &{
      min-width: 10em;
    }
    .Position {
      font-family: monospace;
    }
  }
  &.windWidget{
    .smallDisplay & {
      .medWidget();
      .resize {
        flex-direction: column;
      }
      .widgetData {
        padding-top: 0.5em;
      }
    }
  }
  &.xteWidget{
    .smallWidget();
    canvas{
      margin-right: auto;
      margin-left: auto;
    }
  }
  &.windGraphics{
    .smallWidget();
    .windSpeed {
      text-align: right;
      font-size: @timeFont;
      position: absolute;
      right: 0.2em;
      bottom: 0.2em;
    }
    .windReference {
      text-align: left;
      font-size: @timeFont;
      position: absolute;
      left: 0.2em;
      bottom: 0.2em;
    }
    .horizontal &{
      .widgetData,.windSpeed{
        display: inline-block;
      }
    }
    canvas{
//       width: 85%;
      height: 80%;
    }
    .vertical &{
      height: 11em;
    }
  }
  &.routePointsWidget {
    .more {
      display: none;
      position: absolute;
      right: 0;
      top: 20%;
    }
    .activeEntry .more{
      display: inline-block;
    }
    overflow: hidden;
    .flex-shrink(1) !important;
  }
  &.alarmWidget{
    position: absolute;
    right: 0;
    bottom: 0;
    height: 3em;
    font-size: @timeFont;
    .nightBackFade(@colorRed);
    padding: 1.5em;
    padding-top: 0.3em;
    margin: 0.5em;
    border-radius: 4px;
    .mdShadow2();
    .widgetContainer &{
      position: inherit;
      padding: inherit;
      height: inherit;
      width: 4em;
      margin: inherit;
    }
  }
  &.CombinedWidget {
    .icon.locked {
      position: absolute;
      top: calc(50% - 1em);
      left: calc(50% - 1em);
      z-index: 101;
      color: red;
    }
    & > .listContainer {
      .flex-display();
      .flex-direction(row);
      height: 100%;
      width: 100%;

      .widget {
        height: 100%;
        .flex-grow(1);
        .flex-shrink(1);
        min-width: 0;
        border-right: 1px solid;
      }

      .widget:last-of-type {
        border-right: unset;
      }

      padding: 0;
      margin: 0;

    }
    &.vertical {
      & > .listContainer {
        .flex-direction(column);
      }

      .widget {
        height: unset;
        min-height: 0;
        width: 100%;
        .flex-grow(1);
        .flex-shrink(1);
        border-right: unset;
      }
    }
  }

  &.canvasGauge {
    canvas {
      margin: auto;
      position: relative;
    }
    .canvasFrame {
      width: 100%;
      height: 100%;
      position: relative;
      .flex-display();
      .flex-align-items(center);
      .flex-justify-content(center);

    }
    .gaugeValue {
      position: absolute;
      top: 53%;
      left: ~"calc(50% - 1em)";
      z-index: 20;
      white-space: pre;
    }
    &.radGauge_Speed{
      .gaugeValue{
        top: 70%;
      }
    }
    &.radGauge_Temperature{
      .gaugeValue{
        top: 70%;
      }
    }
    &.linear{
      padding: 0;
      .canvasFrame{
        padding: 0;
      }
    }
  }

  &.signalKPitch .widgetData{
    font-size: 2em;
    text-align: center;
  }
  &.signalKPitch .widgetData.critical{
    color:red;
  }

  &.signalKRoll .widgetData{
    font-size: 2em;
    text-align: center;
  }
  &.signalKRoll .widgetData.critical{
    color:red;
  }
}
